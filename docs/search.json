{
  "articles": [
    {
      "path": "about.html",
      "title": "About this site",
      "description": "Some additional details about the website",
      "author": [],
      "contents": "\r\n\r\n\r\n\r\n",
      "last_modified": "2022-08-19T14:58:45-03:00"
    },
    {
      "path": "colaboradores.html",
      "title": "Colaboradores",
      "description": "Exclusivo para a Semana Universitária",
      "author": [],
      "contents": "\r\n\r\nContents\r\nThiago\r\nLappicy\r\nSaulo\r\nAires de Souza\r\nLuiz Felipe Pereira de\r\nBrito\r\n\r\nApesar deste curso ser uma iniciativa do grupo Água e Modelagem,\r\ncontamos com a participação exclusiva para a Semana Universtária da UnB\r\nde dois integrantes:\r\nThiago Lappicy\r\nThiago Lappicy é aluno de mestrado do Programa de Engenharia Civil e\r\nAmbiental da Universidade de Brasília (PTARH/UnB).\r\nSaulo Aires de Souza\r\nSaulo é Coordenador de Estudos Hidrológicos da Agência Nacional de\r\nÁguas\r\nLuiz Felipe Pereira de Brito\r\nLuiz Felipe é aluno do curso de Engenharia Ambiental da Universidade\r\nde Brasília\r\n\r\n\r\n\r\n",
      "last_modified": "2022-08-19T14:58:47-03:00"
    },
    {
      "path": "conc_basic_R.html",
      "title": "Linguagem R",
      "description": "Conceitos básicos para o curso",
      "author": [],
      "contents": "\r\n\r\nContents\r\nVisão geral do R e RStudio\r\nO que é a linguagem R\r\n\r\n\r\nPorque usar o R em\r\nHidrologia?\r\nInstalação do programa\r\nInterface do R e RStudio\r\nInterface do R e RStudio\r\nInterface do R e RStudio\r\nPrimeiros\r\npassos\r\nComandos no\r\nR \r\n\r\nComandos no\r\nR\r\nComandos no\r\nR\r\nComandos no\r\nR\r\nCriação de\r\nvariáveis e atribuição de valores\r\nCriação de\r\nvariáveis e atribuição de valores\r\nCriação de\r\nvariáveis e atribuição de valores\r\nCriação de\r\nvariáveis e atribuição de valores\r\nObjetos do R\r\nObjetos do\r\nR\r\nObjetos do R - coerção de\r\nvariáveis\r\nObjetos do R - coerção de\r\nvariáveis\r\nObjetos do R - coerção de\r\nvariáveis\r\nObjetos do R - coerção de\r\nvariáveis\r\nObjetos do R - coerção de\r\nvariáveis\r\nObjetos do R - Vetores\r\nObjetos do R - Vetores\r\nObjetos do R - Matrizes\r\nObjetos do R - Matrizes\r\nObjetos do R - Matrizes\r\nObjetos do R - Matrizes\r\nObjetos do R - Matrizes\r\nObjetos do R - Matrizes\r\nObjetos do R - Matrizes\r\nOperações em ou com\r\nvetores\r\nOperações em ou com\r\nvetores\r\nOperações em ou com\r\nvetores\r\nObjetos do R - Listas\r\nObjetos do R - Listas\r\nObjetos do R - Listas\r\nObjetos do R - Fatores\r\nObjetos do R - Data Frames\r\nObjetos do R - Data\r\nFrames\r\nObjetos do R - Data\r\nFrames\r\nObjetos do R - Atributos\r\nInput/output\r\nConstrução de gráficos\r\n\r\nAlguns\r\npacotes\r\n\r\nVisão geral do R e RStudio\r\nO que é a linguagem R\r\n\r\nR\r\nProgramming for Data Science, Roger D. Peng, 2019. Johns Hopkins\r\nBloomberg School of Public Health.\r\nPorque usar o R em\r\nHidrologia?\r\nSimplicidade da linguagem\r\nExcelente desempenho na manipulação de grandes bancos de\r\ndados\r\nAcesso a métodos estatísticos consolidados\r\nAcesso a diversas ferramentas de visualização de dados\r\nAcesso a métodos analíticos de ponta e ferramentas compartilhadas\r\ninternacionalmente - não só pelo uso de pacotes, mas sobretudo, usando\r\nfóruns e tutoriais.\r\n\r\nR in Hydrology , Slater, et al., Hydrol. Earth Syst. Sci., 23,\r\n2939–2963, 2019.\r\nInstalação do programa\r\n\r\n\r\n\r\nDownload de 2 programas: R e RStudio\r\n R \r\n\r\n\r\n R Studio\r\n\r\n\r\n\r\nRStudio é uma plataforma com inúmeras ferramentas\r\núteis e que roda a linguagem R. É possível usar só o R por sua\r\ninterface, mas só é possível usar o RStudio com o R instalado na\r\nmáquina.\r\nInterface do R e RStudio\r\n\r\nInterface do R e RStudio\r\n\r\nInterface do R e RStudio\r\nO layout é ajustável em\r\nview -> Panes -> Pane Layout\r\n\r\nPrimeiros passos\r\nComandos no R \r\nAntes de tudo, é importante saber onde se está trabalhando!\r\n\r\n\r\n#getwd();setwd(\"C:/cursoR\")\r\n#dir()\r\n#source(\"soma.R\")\r\n\r\n\r\nComandos no R\r\nR é utilizável como uma calculadora\r\n\r\n\r\n#setwd(\"C:/cursoR/Basico\")\r\n1 + 2\r\n\r\n[1] 3\r\n\r\n\r\n\r\n12 * 5\r\n\r\n[1] 60\r\n\r\n\r\n\r\n2 / 2\r\n\r\n[1] 1\r\n\r\n\r\n\r\n12 ** 4\r\n\r\n[1] 20736\r\n\r\n\r\n\r\n12 ^ 4\r\n\r\n[1] 20736\r\n\r\nComandos no R\r\nO R trabalha igualmente com vetores e escalares\r\n\r\n\r\nc(1,3,5,7,9) + c(2,4,6,8,10)\r\n\r\n[1]  3  7 11 15 19\r\n\r\nA função c() é usada para concatenar valores, criando\r\nvetores de valores da mesma classe.\r\nComandos no R\r\nAo usar o operador multiplicativo * o R\r\nentende que será feita a operação elemento a elemento. Para\r\nmultiplicação de matrizes, o operador correto é %*%.\r\nImportante na vetorização!\r\n\r\n\r\nas.vector(c(1,3,5,7)) %*% t(as.vector(c(2,4,6,8)))\r\n\r\n     [,1] [,2] [,3] [,4]\r\n[1,]    2    4    6    8\r\n[2,]    6   12   18   24\r\n[3,]   10   20   30   40\r\n[4,]   14   28   42   56\r\n\r\nCriação de\r\nvariáveis e atribuição de valores\r\nA forma de se atribuir um valor a um eleento é\r\nutilizando o operador <- ou =, ou seja, os\r\ndois operadores são equivalentes. Destaca-se que a forma usual de se\r\natribuir é usando o operador <-.\r\n\r\n\r\nx <- 2\r\nx\r\n\r\n[1] 2\r\n\r\nprint(x)\r\n\r\n[1] 2\r\n\r\nclass(x)\r\n\r\n[1] \"numeric\"\r\n\r\nCriação de\r\nvariáveis e atribuição de valores\r\nPode-se atribuir, por exemplo, um valor não numérico a\r\nx.\r\n\r\n\r\nx <- \"test\"\r\nprint(x)\r\n\r\n[1] \"test\"\r\n\r\nclass(x)\r\n\r\n[1] \"character\"\r\n\r\nAo atribuir x a um novo valor, o valor anterior é apagado,\r\nimplicitamente. Outra forma de remover valores de uma variável é usando\r\na função rm().\r\n\r\n\r\nrm(x)\r\n\r\n\r\nCriação de\r\nvariáveis e atribuição de valores\r\nTodos esses operadores existem no R: <-,\r\n= e ==. Os operadores <- e\r\n= são equivalentes, mas == funciona para\r\navaliar uma igualdade e não de atribuir um valor a um elemento do R e\r\nretorna uma variável lógica TRUE ou FALSE. Por\r\nexemplo:\r\n\r\n\r\nx = 2\r\nx == 2\r\n\r\n[1] TRUE\r\n\r\n\r\n\r\nx == 3\r\n\r\n[1] FALSE\r\n\r\nCriação de\r\nvariáveis e atribuição de valores\r\nOutros operadores que resultam em lógicos são:\r\n\r\n\r\nx != 2\r\n\r\n[1] FALSE\r\n\r\n\r\n\r\nx < 3\r\n\r\n[1] TRUE\r\n\r\n\r\n\r\nx >= 2\r\n\r\n[1] TRUE\r\n\r\nObjetos do R\r\nSão cinco os tipos básicos de Classes de objetos do\r\nR:\r\nCaracter\r\nNúmero (real)\r\nInteiro\r\nComplexo\r\nLógico (TRUE/FALSE)\r\nA forma mais básica de armazenar objetos dessas classes é na forma de\r\nvetor e os vetores podem ser criados, com a função c(). A\r\nregra geral é que os vetores só armazenam objetos de mesma classe, a\r\núnica exceção são objetos do tipo list, como veremos mais à\r\nfrente.\r\nObjetos do R\r\nVia de regra, o R enverga números quando se utiliza um valor\r\nnumérico. Para se criar uma variável do tipo integer,\r\ndeve-se acrescentar a letra L ao final:\r\n\r\n\r\nx <- 2L\r\nclass(x)\r\n\r\n[1] \"integer\"\r\n\r\nObjetos do R - coerção de\r\nvariáveis\r\nVetores só podem conter variáveis de um tipo:\r\n\r\n\r\nx <- c(1,2,3,4)\r\nclass(x)\r\n\r\n[1] \"numeric\"\r\n\r\n\r\n\r\ny <- c(FALSE,TRUE,T,F)\r\nprint(y)\r\n\r\n[1] FALSE  TRUE  TRUE FALSE\r\n\r\nclass(y)\r\n\r\n[1] \"logical\"\r\n\r\nObjetos do R - coerção de\r\nvariáveis\r\nVetores só podem conter variáveis de um tipo:\r\n\r\n\r\nx <- c(\"ola\",\"bom\",\"dia\",\"programadores\")\r\nx\r\n\r\n[1] \"ola\"           \"bom\"           \"dia\"           \"programadores\"\r\n\r\nclass(x)\r\n\r\n[1] \"character\"\r\n\r\nObjetos do R - coerção de\r\nvariáveis\r\nVetores só podem conter variáveis de um tipo:\r\n\r\n\r\nx <- c(\"ola\",1,\"dia\",2)\r\nx\r\n\r\n[1] \"ola\" \"1\"   \"dia\" \"2\"  \r\n\r\nclass(x)\r\n\r\n[1] \"character\"\r\n\r\nCOERÇÃO IMPLÍCITA\r\nObjetos do R - coerção de\r\nvariáveis\r\nCoerção explícita:\r\n\r\n\r\nx <- as.character(c(\"ola\",1,\"dia\",2))\r\nx\r\n\r\n[1] \"ola\" \"1\"   \"dia\" \"2\"  \r\n\r\nclass(x)\r\n\r\n[1] \"character\"\r\n\r\nObjetos do R - coerção de\r\nvariáveis\r\nCoerção explícita: às vezes o R não sabe o que fazer e retorna\r\nNA (Non-Available):\r\n\r\n\r\nx <- as.numeric(c(\"ola\",1,\"dia\",2))\r\nx\r\n\r\n[1] NA  1 NA  2\r\n\r\nclass(x)\r\n\r\n[1] \"numeric\"\r\n\r\nObjetos do R - Vetores\r\nPara criar vetores:\r\n\r\n\r\nx <- c(1,2,3,4,5,6,7,8,9,10)\r\nx\r\n\r\n [1]  1  2  3  4  5  6  7  8  9 10\r\n\r\n\r\n\r\nx <- c(1:10)\r\nx\r\n\r\n [1]  1  2  3  4  5  6  7  8  9 10\r\n\r\n\r\n\r\nx <- vector(\"numeric\", length = 10)\r\nx\r\n\r\n [1] 0 0 0 0 0 0 0 0 0 0\r\n\r\nObjetos do R - Vetores\r\nPara criar vetores:\r\n\r\n\r\nx <- c(11:20)\r\nx\r\n\r\n [1] 11 12 13 14 15 16 17 18 19 20\r\n\r\nx[c(1,5,10)]\r\n\r\n[1] 11 15 20\r\n\r\nx[c(4,8,11)]\r\n\r\n[1] 14 18 NA\r\n\r\ndim(x)\r\n\r\nNULL\r\n\r\nObjetos do R - Matrizes\r\nMatrizes são objetos objetos semelhantes a vetores, entretanto, com o\r\natributo dimensão dim.\r\n\r\n\r\nm <- matrix(nrow = 2, ncol = 3); m\r\n\r\n     [,1] [,2] [,3]\r\n[1,]   NA   NA   NA\r\n[2,]   NA   NA   NA\r\n\r\nattributes(m)\r\n\r\n$dim\r\n[1] 2 3\r\n\r\nObjetos do R - Matrizes\r\nMatrizes podem ser criadas a partir de vetores, adicionando o\r\natribuito dimensão.\r\n\r\n\r\nm <- matrix(x, nrow = 2, ncol = 5); m\r\n\r\n     [,1] [,2] [,3] [,4] [,5]\r\n[1,]   11   13   15   17   19\r\n[2,]   12   14   16   18   20\r\n\r\nm <- matrix(x, nrow = 2, ncol = 5, byrow = TRUE); m\r\n\r\n     [,1] [,2] [,3] [,4] [,5]\r\n[1,]   11   12   13   14   15\r\n[2,]   16   17   18   19   20\r\n\r\nObjetos do R - Matrizes\r\nPara selecionar elementos de uma matriz, é necessário especificar as\r\nduas dimensões:\r\n\r\n\r\nm <- matrix(1:4, nrow = 2); m\r\n\r\n     [,1] [,2]\r\n[1,]    1    3\r\n[2,]    2    4\r\n\r\nm[2,2]\r\n\r\n[1] 4\r\n\r\nObjetos do R - Matrizes\r\nSelecionar elementos de matrizes quadradas:\r\n\r\n\r\nlower.tri(m)\r\n\r\n      [,1]  [,2]\r\n[1,] FALSE FALSE\r\n[2,]  TRUE FALSE\r\n\r\nupper.tri(m)\r\n\r\n      [,1]  [,2]\r\n[1,] FALSE  TRUE\r\n[2,] FALSE FALSE\r\n\r\nObjetos do R - Matrizes\r\nSelecionar elementos de matrizes quadradas:\r\n\r\n\r\nm[lower.tri(m)] <- NA; m\r\n\r\n     [,1] [,2]\r\n[1,]    1    3\r\n[2,]   NA    4\r\n\r\ndiag(m) <- NA; m\r\n\r\n     [,1] [,2]\r\n[1,]   NA    3\r\n[2,]   NA   NA\r\n\r\nObjetos do R - Matrizes\r\nVetores podem ser unidos a fim de criar uma matriz:\r\n\r\n\r\nx <- c(1:10)\r\ny <- rnorm(10, 10, 5)\r\nuniao <- cbind(x, y)\r\nuniao\r\n\r\n       x          y\r\n [1,]  1 13.4688366\r\n [2,]  2 20.1533192\r\n [3,]  3 12.2507996\r\n [4,]  4  7.7916776\r\n [5,]  5  0.8485384\r\n [6,]  6  2.8075111\r\n [7,]  7  3.7134800\r\n [8,]  8  8.8704693\r\n [9,]  9 15.9396758\r\n[10,] 10 12.9275215\r\n\r\ndim(uniao)\r\n\r\n[1] 10  2\r\n\r\nA função cbind() adiciona colunas as matrizes.\r\nObjetos do R - Matrizes\r\nVetores podem ser unidos a fim de criar uma matriz:\r\n\r\n\r\nx <- c(1:10)\r\ny <- rnorm(10, 20, 5)\r\nuniao <- rbind(x, y)\r\nuniao\r\n\r\n      [,1]     [,2]     [,3]     [,4]   [,5]     [,6]     [,7]\r\nx  1.00000  2.00000  3.00000  4.00000  5.000  6.00000  7.00000\r\ny 21.72537 19.84388 19.98412 14.38606 25.405 18.83283 18.99161\r\n      [,8]     [,9]    [,10]\r\nx  8.00000  9.00000 10.00000\r\ny 21.78949 17.13077 16.41911\r\n\r\ndim(uniao)\r\n\r\n[1]  2 10\r\n\r\nA função rbind() adiciona linhas as matrizes.\r\nOperações em ou com vetores\r\n\r\n\r\nx <- c(1:10)\r\nsqrt(2*x/4)\r\n\r\n [1] 0.7071068 1.0000000 1.2247449 1.4142136 1.5811388 1.7320508\r\n [7] 1.8708287 2.0000000 2.1213203 2.2360680\r\n\r\n\r\n\r\nx <- c(1:5)\r\ny <- c(1:4)\r\nx+y\r\n\r\n[1] 2 4 6 8 6\r\n\r\nOperações em ou com vetores\r\n\r\n\r\nx <- c(1:12); names(x) <- month.abb\r\nx\r\n\r\nJan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec \r\n  1   2   3   4   5   6   7   8   9  10  11  12 \r\n\r\n\r\n\r\nx[1]\r\n\r\nJan \r\n  1 \r\n\r\nx[\"Jan\"]\r\n\r\nJan \r\n  1 \r\n\r\nOperações em ou com vetores\r\n\r\n\r\nx > 6\r\n\r\n  Jan   Feb   Mar   Apr   May   Jun   Jul   Aug   Sep   Oct   Nov \r\nFALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE \r\n  Dec \r\n TRUE \r\n\r\nx[x > 6]\r\n\r\nJul Aug Sep Oct Nov Dec \r\n  7   8   9  10  11  12 \r\n\r\nsum(x > 6)\r\n\r\n[1] 6\r\n\r\nObjetos do R - Listas\r\nListas são elementos importantes na programação em R. Uma das\r\nvantagens de se saber utilizar bem esse tipo de elemento é que nelas é\r\npossível armazenar elementos de diferentes tipos (caracter, número real,\r\ninteiro, complexo, lógico).\r\nElas são diferentes dos vetores que, via de regra, só armazenam\r\nobjetos de mesma classe.\r\nObjetos do R - Listas\r\nPara criar uma lista:\r\n\r\n\r\nx <- list(1, \"Ola\", 1+5i, TRUE, 4L)\r\nx\r\n\r\n[[1]]\r\n[1] 1\r\n\r\n[[2]]\r\n[1] \"Ola\"\r\n\r\n[[3]]\r\n[1] 1+5i\r\n\r\n[[4]]\r\n[1] TRUE\r\n\r\n[[5]]\r\n[1] 4\r\n\r\nObjetos do R - Listas\r\nPara selecionar dados de listas, utiliza-se o duplo cochete\r\n[[]]:\r\n\r\n\r\nx <- list(c(1,2,3), c(\"Ola\", \"Mundo\"), 1+5i, TRUE, 4L)\r\nx[[1]]\r\n\r\n[1] 1 2 3\r\n\r\nx[[2]][2]\r\n\r\n[1] \"Mundo\"\r\n\r\nx[[5]] + 6\r\n\r\n[1] 10\r\n\r\nObjetos do R - Fatores\r\nO factor é uma importante classe de elemento no R para\r\ndefinir variáveis categóricas. São úteis em modelos de regressão linear\r\ncom variáveis categóricas de entrada (estações do ano, classes de solo,\r\ncotas de alerta hidrológico etc.):\r\n\r\n\r\nx <- factor(c(\"normal\",\"atenção\",\"alerta\",\"inundação\",\"inundação severa\",\"inundação\",\"atenção\",\"normal\",\"inundação\",\"normal\",\"alerta\",\"atenção\"))\r\nx\r\n\r\n [1] normal           atenção          alerta          \r\n [4] inundação        inundação severa inundação       \r\n [7] atenção          normal           inundação       \r\n[10] normal           alerta           atenção         \r\nLevels: alerta atenção inundação inundação severa normal\r\n\r\ntable(x)\r\n\r\nx\r\n          alerta          atenção        inundação inundação severa \r\n               2                3                3                1 \r\n          normal \r\n               3 \r\n\r\nObjetos do R - Data Frames\r\nA classe de data.frame é muito utilizada em R. É o que\r\nse utiliza para dados tabulados. Além disso, todos os elementos do\r\ndata.frame têm o mesmo comprimento.\r\n\r\n\r\nDF <- data.frame(x = c(1:3), y = rnorm(3))\r\nDF\r\n\r\n  x          y\r\n1 1 -0.9408622\r\n2 2 -0.3816112\r\n3 3 -0.5677915\r\n\r\nclass(DF)\r\n\r\n[1] \"data.frame\"\r\n\r\nObjetos do R - Data Frames\r\nmatrix: todos os elementos são da mesma classe;\r\ndata.frame: dentro de cada coluna, os objetos pertencem\r\nà mesma classe, mas diferentes colunas podem pertencer a diferentes\r\nclasses;\r\nlist: cada elemento pode pertencer a uma classe\r\ndiferente.\r\nQuando são lidos objetos externos (planilhas excel, arquivos .txt ou\r\n.csv), usando as funções do R read.table() ou\r\nread.csv(), por exemplo, o objeto criado é um\r\ndata.frame.\r\nObjetos do R - Data Frames\r\nCoerção de classe para data.frame.\r\n\r\n\r\nm <- matrix(c(1:9), nrow = 3)\r\nas.data.frame(m)\r\n\r\n  V1 V2 V3\r\n1  1  4  7\r\n2  2  5  8\r\n3  3  6  9\r\n\r\nObjetos do R - Atributos\r\nCoerção de classe para data.frame.\r\n\r\n\r\nm <- matrix(c(1:9), nrow = 3); attributes(m)\r\n\r\n$dim\r\n[1] 3 3\r\n\r\nattributes(as.data.frame(m))\r\n\r\n$names\r\n[1] \"V1\" \"V2\" \"V3\"\r\n\r\n$class\r\n[1] \"data.frame\"\r\n\r\n$row.names\r\n[1] 1 2 3\r\n\r\nInput/output\r\nÉ imprescindível que a gente entenda como ler informações\r\nhidrológicas dos mais diversos tipos de arquivo, assim como aprender\r\ncomo escrever os resultados de nossas análises de forma organizada em\r\naruivos de diferentes formatos para que possamos comunicar nossos\r\nresultados e para que outros possam avaliar e/ou continuar nossas\r\nanálises.\r\nPara isso, investiremos um tempo discutindo algumas maneiras de ler e\r\nescrever em arquivos fazendo uso de funções do R.\r\nConstrução de gráficos\r\nAlguns pacotes\r\n\r\n\r\n\r\n",
      "last_modified": "2022-08-19T15:20:43-03:00"
    },
    {
      "path": "data_explore.html",
      "title": "Análise exploratória dos dados",
      "description": "Como obter uma visão geral dos dados",
      "author": [],
      "contents": "\r\n\r\nContents\r\nPacotes\r\nCarcaterização numérica\r\nCaracterização gráfica\r\n\r\nPacotes\r\nCarcaterização numérica\r\nCaracterização gráfica\r\n\r\n\r\n\r\n",
      "last_modified": "2022-08-19T14:58:56-03:00"
    },
    {
      "path": "data_manip.html",
      "title": "Manipulação dos dados",
      "description": "Como organizar as informações para facilitar as análises",
      "author": [],
      "contents": "\r\n\r\nContents\r\nPacotes\r\nBla bla bla\r\n\r\nPacotes\r\nBla bla bla\r\n\r\n\r\n\r\n",
      "last_modified": "2022-08-19T14:58:58-03:00"
    },
    {
      "path": "frequency_analysis.html",
      "title": "Análise de frequência de cheias",
      "description": "Exemplo de análise local com dados reais",
      "author": [],
      "contents": "\r\n\r\nContents\r\nObjetivos da atividade\r\nSeleção das vazões máximas\r\nanuais\r\nVisualização dos dados\r\nobservados\r\nEscolha da estação\r\nfluviométrica\r\nConstrução de curva\r\nde frequência amostral\r\n\r\nInferência\r\nCálculo dos momentos-L\r\nDiagrama de momentos-L\r\nEstimativa dos\r\nparâmetros da distribuição\r\nCálculo dos quantis de\r\ncheia\r\n\r\nConstrução da curva de\r\nfrequência\r\nDescrição das\r\nincertezas (intervalo de confiança)\r\nCurva de frequência final\r\nDetalhes\r\ntécnicos\r\nDistribuição de\r\nprobabilidades\r\n\r\nPassos a serem executados\r\n\r\nObjetivos da atividade\r\nO objetivo desta atividade é realizar uma análise de frequência de\r\ncheias a nível local. Isso significa que iremos relacionar a magnitude\r\ndas vazões máximas anuais com a probabilidade da mesma ser excedida. A\r\nanálise a nível local siginifca que utilizaremos apenas as informações\r\nde vazão observadas na estação fluviométrica de interesse, sem fazer uso\r\nde informações sobre as vazões máximas anuais que teham acontecido em\r\noutras estações fluviométricas localizadas na região.\r\nAlém de construirmos a relação entre a magnitude das vazões máximas\r\nanuais e a respectiva probabilidade de excedência, é importante saber\r\nestimar também o grau de incerteza nessas estimativas. Essas incertezas\r\nsão usualmente representadas por intervalos de confiança, como veremos\r\nmais adianate.\r\nAlém de calcular essas quantidades, a curva de frequência, e suas\r\nrespectivas incertezas, são representadas graficamente, como na figura\r\nabaixo, que mostra os resultados para um estudo de cheias numa seção do\r\nRio Salado, localizada na província de Santa Fé, na Argentina, onde em\r\n2003 ocorreu o rompimento de um dique que resultou em perde de vidas\r\nhumanas e elevados prejuízos.\r\nContruiremos aqui no curso uma figura semelhante a esta, onde no\r\neixo-x temos o tempo de recorrência e no eixo-y a magnitude das vazões\r\nmáximas anuais. O tempo de recorrência apresentado no eixo-x é uma\r\nmaneira de representar a probabilidade de excedência. A linha cheia em\r\nvermelho representa o valor esperado dos valores da vazão máxima anual\r\nem função do tempo de recorrência, enquanto as linhas tracejadas\r\nrepresentam os intervalos de confiança de 95%, ilustrando as incertezas\r\nenvolvidas nessas estimativas. Os círculos azuis escuros representam as\r\nvazões máximas anuais registradas no passado, enquanto o círculo azul\r\nclaro mostra a cheia destruidora de 2003.\r\n\r\n\r\n\r\n(#fig:curva_freq)Curva de frequência do cheias do Rio Salado, na\r\nArgentina.\r\n\r\n\r\n\r\nSeleção das vazões máximas\r\nanuais\r\nO primeiro passo de nossa atividade consiste em obter a série de\r\nmáximos anuais que desejamos analisar. A obtenção da série de máximos\r\nanuais será realizada em duas etapas. Primeiro vamos obter a séries de\r\nvazões diárias, e para isso utilizaremos a mesma função de obtenção de\r\nséries diárias de vazão que aprendemos na segunda aula deste curso. Com\r\na série de vazões diárias em mãos, passaremos para a segunda etapa, que\r\né a de extrair a vazão máxima de cada ano hidrológico.\r\nA função abaixo permite obter a série de vazões diárias de uma\r\nestação fluviométrica. O único argumento desta função é o código da\r\nestação. Quando chamamos esta função, ela retorna um dataframe com 3\r\ncolunas: o código da estação, a data, e o valor da vazão diária.\r\nComo já estudamos esta função anteriormente, a uitlizaremos aqui sem\r\nentrar em qualqer detalhes sobre seu funcionamento.\r\n\r\n\r\n# Função para obter série histórica de vazão de uma determinada estação ####\r\ndados_serie_ANA <- function(cod_estacao = NA,\r\n                            data_inicio = \"01/01/1800\",\r\n                            data_fim = Sys.Date(),\r\n                            tipo_dados = 3,\r\n                            nivel_consist = 1){\r\n  \r\n  # Pegar dados a partir do url e transformar em um dataframe\r\n  url_base <-\r\n    paste0(\"http://telemetriaws1.ana.gov.br/ServiceANA.asmx/\",\r\n           \"HidroSerieHistorica?\",\r\n           \"codEstacao=\", cod_estacao,\r\n           \"&dataInicio=\", data_inicio,\r\n           \"&dataFim=\", data_fim,\r\n           \"&tipoDados=\", tipo_dados,\r\n           \"&nivelConsistencia=\", nivel_consist)\r\n  \r\n  url_parse <- XML::xmlParse(url_base, encoding = \"UTF-8\")\r\n  node_doc <- XML::getNodeSet(url_parse, \"//SerieHistorica\")\r\n  dados_estacao <- XML::xmlToDataFrame(nodes = node_doc)\r\n  \r\n  # Por algum motivo o hidroweb não está filtrando os dados pela consistencia\r\n  dados_estacao <- filter(dados_estacao, NivelConsistencia == nivel_consist)\r\n  \r\n  # Separar data e hora\r\n  dados_estacao$Data <- as.Date(substr(dados_estacao$DataHora, 1, 10))\r\n  dados_estacao$Hora <- substr(dados_estacao$DataHora, 12, 19)\r\n  \r\n  # Fazer um dataframe só com datas e valores de vazão\r\n  datas_dia <- seq.Date(from = min(dados_estacao$Data),\r\n                        to = max(dados_estacao$Data) %m+% months(1) - 1,\r\n                        by = \"day\")\r\n  \r\n  tabela_final <- data.frame(Cod_estacao = dados_estacao$EstacaoCodigo[1],\r\n                             Data = as.character(datas_dia),\r\n                             Vazao = as.numeric(NA))\r\n  \r\n  \r\n  for(i in 1:nrow(tabela_final)){\r\n    # Dia em análise\r\n    dia <- as.numeric(substr(tabela_final$Data[i], 9, 10))\r\n    \r\n    # Mês e ano em análise\r\n    mes_ano <- as.Date(paste0(substr(tabela_final$Data[i], 1, 8), \"01\"))\r\n    \r\n    # Olhar a linha do mes e ano e escolher a coluna pelo dia + 15\r\n    linha_dado <- which(dados_estacao$Data == mes_ano)\r\n    \r\n    # Se não tiver o mês nos dados da estação, colocar valor NA\r\n    ifelse(length(linha_dado) == 0,\r\n           tabela_final$Vazao[i] <- NA,\r\n           tabela_final$Vazao[i] <-\r\n             as.numeric(dados_estacao[linha_dado, (dia + 15)]))\r\n    \r\n  }\r\n  \r\n  return(tabela_final)\r\n}\r\n\r\n\r\nPrecisamos escolher uma estação fluviométrica para realizar nossa\r\nanálise. SUgiro utilizar a estação 60435000, localizada\r\nna bacia do Rio Descoberto, que drena uma área de \\(113.2 km^2\\), mas vocês têm a indepedência\r\nde escolhar qualquer outras estação que esteja no banco de dados da\r\nAgência Nacional de Águas.\r\nPara obter a série diária da estação escolhida, basta chamar a função\r\nacima passando o argumento necessário, que é simplesmente o código da\r\nestação desejada. A função devolve um dataframe com a série de máximos\r\nanuais.\r\nPara fins de visualização, utilizamos a função\r\nhead(nome_do_dataframe) do R, como mostrado abaixo, que nos\r\nmostra as primeiras 6 linhas do dataframe.\r\n\r\n\r\ndados_60435000 <- dados_serie_ANA(cod_estacao = 60435000)\r\nhead(dados_60435000)\r\n\r\n  Cod_estacao       Data Vazao\r\n1    60435000 1978-05-01    NA\r\n2    60435000 1978-05-02    NA\r\n3    60435000 1978-05-03    NA\r\n4    60435000 1978-05-04    NA\r\n5    60435000 1978-05-05    NA\r\n6    60435000 1978-05-06    NA\r\n\r\n\r\n\r\nplot(dados_60435000$Vazao)\r\n\r\n\r\n\r\nPode-se notar que nos seis primeiros dias dos dados, que se inicia em\r\nmaio de 1978, não temos valores registrados de vazão.\r\nCom a série de vazões diárias, passamos ao segundo passo que é o de\r\nconstruir a série de máximos anuais com base no ano hidrológico. Para\r\nisso, utilizaremos uma outra função, que é apresentada abaixo. Veja que\r\na função internamente considera o ano hidrológico com início no mês de\r\nagosto. O mês de início do ano hidrológico pode ser facilmente alterado,\r\nse for o desejo do analista. Uma outra solução seria reesecrever a\r\nfunção incluindo como argumento o mês de início do ano hidrológico.\r\n\r\n\r\n# Contrução da série de máximos anuais a partir de um ano hidrológico ####\r\nfun_max_ano <- function(tabela = NA,\r\n                        comeco_ano_hidro = 8){\r\n  \r\n  # Transformar a coluna Data em \"Dates\" (caso esteja em character)\r\n  tabela$Data <- as.Date(tabela$Data)\r\n  \r\n  # Definir se o mês em questão entra no ano atual ou no próximo ano\r\n  desloc_ano <- ifelse(month(tabela$Data) < comeco_ano_hidro, 0, 1)\r\n  \r\n  # Ano Hidro\r\n  tabela$ano_hidro <- year(tabela$Data) + desloc_ano\r\n  \r\n  # Fazer uma tabela final apenas com os máximos anuais\r\n  max_anuais <-\r\n    tabela %>%\r\n    group_by(Cod_estacao, ano_hidro) %>%\r\n    summarise(maxima = max(Vazao))\r\n}\r\n\r\n\r\nPara finalmente obtermos a série de máximos anuais, basta chamar a\r\nfunção fornecendo o arquivo que contém as séries diárias de vazão, que\r\nno nosso caso é o dados_60435000. Mais uma vez, podemos\r\nutilizar a função head para dar uma leve espiada nas\r\ninformoações contidas no dataframe.\r\n\r\n\r\nQ_max <- fun_max_ano(dados_60435000)\r\nhead(Q_max)\r\n\r\n# A tibble: 6 × 3\r\n# Groups:   Cod_estacao [1]\r\n  Cod_estacao ano_hidro maxima\r\n  <chr>           <dbl>  <dbl>\r\n1 60435000         1978   NA  \r\n2 60435000         1979   16.1\r\n3 60435000         1980   28.9\r\n4 60435000         1981   11.1\r\n5 60435000         1982   12.8\r\n6 60435000         1983   25.3\r\n\r\nA função fun_max_ano foi escrita de forma que qualquer\r\nfalha na série de vazões diárias num dado ano hidrológico resulta numa\r\nfalha na série de máximos anuais. Isso nem semrpe é necessário, já que\r\nfalhas no período de estiagem não indicam falhas nas séries de máximos,\r\nmas creio que a função nos serve bem para este curso.\r\nPodemos notar a presença de um NA na nossa plotagem\r\nacima. É interessante verificar o número total de anos disponíveis com\r\ndados diários de vazão, bem como o número de anos com falaha na série de\r\nmáximos anuais.\r\nO número de anos com dados de vazões diárias pode ser obtidos\r\nsimplemente identificando o número de linhas no dataframe\r\nQ_max, e para isso utilizamos o código abaixo,\r\n\r\n\r\nn_anos <- nrow(Q_max)\r\nn_anos\r\n\r\n[1] 45\r\n\r\nMas já sabemos que o ano de 1978 não contém o valor de vazão máxima\r\nporque a série de vazões diárias não estava complete. Será que há outros\r\nanos no histórico com esse problema. Para identificar se há falha em\r\noutros anos, utilizaremos duas funções do R de forma conjunta,\r\nis.na e which. A função is.na\r\nidentifica se o elemento é um NA ou não, retornando um\r\nvalor lógico, TRUE ou FALSE, enquanto a função\r\nwhich permite identificar a posição de uma dada condição. O\r\ncódigo abaixo permite identificar em quais anos ocorrem falhas na série\r\nde máximos anuais,\r\n\r\n\r\nindex <- which(is.na(Q_max[,3]==TRUE))\r\nanos_falha <- Q_max[index,2:3]\r\nanos_falha\r\n\r\n# A tibble: 3 × 2\r\n  ano_hidro maxima\r\n      <dbl>  <dbl>\r\n1      1978     NA\r\n2      2009     NA\r\n3      2020     NA\r\n\r\nA primeira linha de código identifica as posições em que há a\r\npresença de NA na terceira coluna do dataframe, que é a\r\ncoluna com as informações sobre as vazões máximas de cada ano\r\nhidrológico, e associa à variável index. Na linha seguinte,\r\ncriamos um novo dataframe com a informação dos anos em que temos falhas\r\nnos dados.\r\nÉ verdade que poderíamos ter escrito o código acima de uma forma mais\r\ncompacta, porém ficaria mais difícil de entender. Veja o que vocÊ\r\nacha?\r\n\r\n\r\nanos_falha <- Q_max[which(is.na(Q_max[,3]==TRUE)),2:3]\r\nanos_falha\r\n\r\n# A tibble: 3 × 2\r\n  ano_hidro maxima\r\n      <dbl>  <dbl>\r\n1      1978     NA\r\n2      2009     NA\r\n3      2020     NA\r\n\r\nMais à frente, quando tivermos que fazer os cálculos necessários para\r\nrealizar a naálise de frequência, teremos que nos livrar desses anos com\r\nfalhas. Mas por enquanto vamos deixá-los ocmo estão, e passemos a etapa\r\nseguinte que é a de visualizar a série de máximos anuais.\r\nVisualização dos dados\r\nobservados\r\n\r\n\r\nplot(Q_max$ano_hidro,Q_max$maxima)\r\n\r\n\r\n\r\nEscolha da estação\r\nfluviométrica\r\nConstrução de curva\r\nde frequência amostral\r\nPara que possamos plotar os círculos azuis escuros da Figura\r\napresentada anteriormente para o caso do Rio Salado, que representam as\r\nvazões máximas anuais observadas na série histórica, precisamos\r\ndeterminar o tempo de recorrência para cada um desses valores.\r\nO tempo de recorrência associado a uma determinada magnitude de\r\nvazão, \\(T_r(q)\\), é um conceito\r\nhidrológico bastante conhecido, de forma que não dedicaremos muito tempo\r\npara discutí-lo aqui. Por definição, o tempo de recorrência de um evento\r\ncuja magnitude vale \\(q\\) é igual ao\r\ninverso da probabilidade da vazão máxima anual exceder esse valor,\r\n\\[T_r(q) =\r\n\\frac{1}{P(Q>q)}\\]\r\nPor exemplo, se a probabilidade da vazão máxima anual ultrapassar um\r\ndado valor \\(q\\) for igual a 0.10,\r\ndizemos que o tempo de recorrência dessa vazão \\(q\\) é de 10 anos. Da mesma forma, se \\(P(Q>q)=0.01\\), dizemos que o tempo de\r\nrecorrência de \\(q\\) vale 100 anos.\r\nPortanto, para que possamos incluir as vazões observadas na nossa\r\ncurva de frequência, será preciso determinar a probabilidade de\r\nexcedência de cada uma das observações contidas na série de vazões\r\nmáximas anuais da localidade de interesse. Isso é feito com base na\r\nchamada distribuição empírica de frequência.\r\nA distribuição empírica de frequência relaciona cada valor de vazão\r\nmáxima observada na série histórica, denominada aqui de \\(q_i\\), com sua frequência relativa\r\nacumulada, \\(\\hat{F}_Q(q_i)\\), que\r\nrepresenta a nossa estimativa para a probabilidade da variável de\r\ninteresse, \\(X\\), ser menor ou igual ao\r\nvalor amostral, \\(q_i\\),\r\n\\[\\hat{F}_Q(q_i) = \\hat{P}(Q \\le\r\nq_i)\\]\r\nem que \\(\\hat{F}_Q\\) é a estimativa\r\nda frequência relativa acumulada da variável aleatória \\(Q\\) baseada na amostra, enquanto \\(q_i\\) reprenta o valor de uma dada\r\nobservação \\(i\\). O uso do acento\r\ncircunflexo na equação acima é uma convenção utilizada em estatística\r\npara mostrar que estamos nos referindo a uma estimativa da grandeza em\r\nquestão baseada na amostra que se tem em mãos.\r\nBem, quando falamos em \\(T_r(q)\\),\r\nnos referimos à probabilidade de excedência, que é na verdade o\r\ncomplemento de \\(\\hat{F}_Q(q_i)\\), ou\r\nseja,\r\n\\[\\hat{P}(Q \\gt q_i) = 1 - \\hat{P}(Q \\le\r\nq_i)\\] de forma que\r\n\\[\\hat{T}_r(q_i) = \\frac{1}{1-\\hat{P}(Q\r\n\\le q_i)}\\]\r\nPode parecer estranho se você estiver vendo isso pela primeira vez,\r\nmas a verdade é que há diferentes maneiras de se estimar a distribuição\r\nempírica de frequência das observações de uma amostra,\\(\\hat{P}(Q\\le q_i)\\), ou seu complemento,\r\n\\(\\hat{P}(Q\\le q_i)\\).\r\nUma maneira bem comum de estimar tais probabilidades quando se tem\r\numa amostra de tamanho \\(n\\) consiste\r\nem ordenar a série em ordem decrescente determinar a probabilidade de\r\nexcedência utilizando a seguinte fórmula,\r\n\\[\\hat{P}(Q > q_{(i)}) = 1 -\r\n\\hat{F}_Q(q_{(i)}) = \\frac{i}{n+1}\\]\r\nem que \\(q_{(i)}\\) representa a\r\nchamada estatística de ordem \\(i\\), em\r\nque \\(q_{(1)}\\gt q_{(2)}\\gt \\ldots \\gt\r\nq_{(n)}\\), de forma que \\(q_{(1)}\\) e \\(q_{(n)}\\) são, respectivamente, a maior e a\r\nmenor observações da amostra. De acordo com essa expressão, por exemplo,\r\nnuma amostra de tamanho 49, a probabilidade da vazão mázima anual ser\r\nmaior do que a maior observação da amostra vale \\(P(Q>q_{(1)})=0.02\\)), o que resulta num\r\ntempo de recorrência de \\(T_r(q_{(1)})=50\\) anos.\r\nEmbora não seja o objetivo aqui deste curso entender os detalhes\r\ndeste procedimento, mas vale a pena dizer o seguinte: como a\r\ndistribuição empírica de frequência depende da amostra que se tem em\r\nmãos, ela é na verdade uma variável aleatória, ou seja, ela pode variar\r\nde amostra para amostra, de modo que é razoável imaginar que ela possui\r\numa distribuição de probabilidades.\r\nSuponha que fosse possível obter diversas amostras independentes da\r\nvariável de interesse, todas de tamanho \\(n\\) e oriundas de uma mesma distribuição de\r\nprobabilidades. Vale lembrar que na prática apenas uma amostra está\r\ndisponível. Embora não seja apresentado aqui o porquê, é possível\r\nmostrar que a probabilidade de não-excedência da estatística de ordem\r\n$X_{(i)}, \\(Q_i = P(X \\gt x_{(i)})\\) é\r\ntambém uma variável aleatória, pois depende da amostra. A distribuição\r\nde \\(Q_i\\) é uma Beta (i.e., possui uma\r\ndistribuição Beta) com valor esperado\r\n\\[E[Q_i] = \\frac{i}{n + 1}\\]\r\ne variância\r\n\\[V[Q_i] =\r\n\\frac{n-i+1}{(n+1)^2(n+2)}\\] independetente da dsitribuiçao da\r\nvariável de interesse.\r\nIsso significa, por exemplo, que numa amostra com 19 observações, o\r\nvalor esperado da probabilididade da variável de interesse ser maior do\r\nque a segunda maior observação da referida amostra, \\(Q_{(2)}\\), é igual a\r\n\\[E[Q_{(2)}]=\\frac{2}{20}=0.10\\]\r\nda mesma forma que o valor esperado da probabilididade da variável de\r\ninteresse ser maior do que a maior observação da referida amostra, \\(Q_{(1)}\\), é igual a\r\n\\[E[Q_{(1)}]=\\frac{1}{20}=0.05\\]\r\nPodemos concluir, portanto, que se estimarmos \\(F_X(x_{(i)})\\) utilizando a expressão \\(i/(n+1)\\), em média, utilizando várias\r\namostras, a média das estimativas de \\(F_X(x_{(i)})\\) seria bem próxima do valor\r\npopulacional, e o grau de proximidade aumenta com o tamanho da\r\namostra.\r\nPorém, é importanter deixar claro que quando há apenas uma amostra,\r\nnão é possível ter certeza de que a estimativa é correta, mas é\r\nintuitivo pensar que um estimador, que em média está correto, é de fato\r\num bom estimador. Mais a frente na aula, retornaremos à discussão sobre\r\nestimadores e suas características. Mas vale introduzir o conceito de\r\nestimador não tendencioso, que é aquele que na média, ao longo de várias\r\namostras, seu valor é igual ao valor populacional.\r\nPortanto, por se tratar de um estimador não-tendencioso da\r\nprobabilidade de não-excedência da estatística de ordem de uma amostra,\r\na expressão apresentada anteriormente é uma forte candidata a ser\r\nutilizada na construção da curva de distribuição empírica de frequência.\r\nPorém, como já mencionado anteriormente, há outras formas de se estimar\r\n\\(F_X(x_{(i)})\\), sendo que todas\r\nseguem a seguinte expressão, com diferença apenas para o valor do\r\nparâmetro \\(a\\).\r\n\\[P(X \\lt x_{(i)}) =\r\n\\frac{i-a}{n+1-2a}\\]\r\nA Tabela abaixo apresenta diversas expressões para o estimador de\r\n\\(F_X(x_{(i)})\\), incluindo a motivação\r\nde cada alternativa.\r\nNome\r\nFórmula\r\n\\(a\\)\r\n\\(T_n\\)\r\nMotivação\r\nWeibull\r\n\\(\\frac{i}{n+1}\\)\r\n0\r\n\\(n+1\\)\r\nEst. não-tendenciosa da Prob. de não-excedência para qualquer\r\ndistribuição teórica\r\nMediana\r\n\\(\\frac{i-0.3175}{n+0.365}\\)\r\n0.3175\r\n\\(1.47n+0.5\\)\r\nMediana das probabilidades\r\nAPL\r\n\\(\\frac{i-0.35}{n}\\)\r\n\\(~0.35\\)\r\n\\(1.54n\\)\r\nEstimador baseado em momentos probabilísticos\r\nBlom\r\n\\(\\frac{i-3/8}{n+1/4}\\)\r\n0.375\r\n\\(1.60n+0.4\\)\r\nQuantis normais não-tendenciosos\r\nCunnane\r\n\\(\\frac{i-0.40}{n+0.2}\\)\r\n0.40\r\n\\(1.67n+0.3\\)\r\nQuantis aproximadamente não-tendenciosos\r\nGrigorten\r\n\\(\\frac{i-0.44}{n+0.12}\\)\r\n0.44\r\n\\(1.79n+0.2\\)\r\nOtimizada para distribuição Gumbel\r\nHazen\r\n\\(\\frac{i-0.5}{n}\\)\r\n0.50\r\n\\(2n\\)\r\nEscolha tradicional\r\nInferência\r\nCálculo dos momentos-L\r\nDiagrama de momentos-L\r\nEstimativa dos\r\nparâmetros da distribuição\r\nCálculo dos quantis de cheia\r\nConstrução da curva de\r\nfrequência\r\nDescrição das\r\nincertezas (intervalo de confiança)\r\nCurva de frequência final\r\nDetalhes técnicos\r\nDistribuição de\r\nprobabilidades\r\nPara que servem?\r\nO uso de uma distribuição teórica de probabilidades se justifica por\r\ntrês motivos,\r\npermite a extrapolação da curva, ou seja, torna possível a\r\nestimativa de uma vazão com 50 anos tempo de retorno mesmo quando temos\r\napenas 20 anos de dados;\r\npode ser utilizada como um interpolador de quantis de cheia, já que\r\no uso da frequência amostral só permite estimar quantis para um número\r\ndiscreto, e nem sempre desejado, de períodos de retorno.\r\né uma maneira de armazenar as infomações relevantes da série de\r\nmáximos de maneira compacta, visto que basta guardar o valor dos\r\nparâmetro da distribuição para obter qualquer quantil de cheia que se\r\ntenha interesse.\r\nQuais são as\r\ndistribuições mais usadas?\r\nComo avaliar a\r\ndistribuição mais indicada?\r\nAjuste dos parâmetros da\r\ndistribuição\r\nEstimativa dos quantis de\r\ncheia\r\nDescrição das incertezas\r\nPassos a serem executados\r\nVisualizar os dados\r\nEscolha da estação fluviométrica\r\nObtenção da série de máximos anuais\r\nCálculo das posições de plotagem\r\nConstrução de figura utilizando valores amostrais apenas\r\n\r\nInferência\r\nCálculo dos momentos-L para fins de verificação da distribuição\r\nteórica de probabilidades\r\nPlotagem do diagrama de momentos-L das distribuições teóricas\r\nAjuste dos parâmetros da distribuição teórica de probabilidades\r\nLognormal\r\nGeneralizada de valores extremos\r\n\r\nCálculo dos quantis de cheia\r\n\r\nCurva de frequência sem incertezas\r\nEstimativa dos intervalos de confiança para a distribuição\r\nLognormal\r\nCurva de frequência com intervalos de confiança\r\n\r\n\r\n\r\n",
      "last_modified": "2022-08-21T12:13:28-03:00"
    },
    {
      "path": "get_data.html",
      "title": "Obtenção de dados hidrológicos na web",
      "description": "Conceitos básicos",
      "author": [],
      "contents": "\r\n\r\nContents\r\nRepositório de dados\r\nObtenção via webservice\r\nLista das Estações\r\nTelemétricas da ANA\r\nDados Hidrometeorológicos da\r\nANA\r\nOutras\r\nformas\r\n\r\nRepositório de dados\r\nObtenção via webservice\r\nSer capaz de obter informações hidrológicas de forma gratuita\r\ndiretamente da internet, algo conhecido como “webscraping”, representa\r\num ganho significativo de eficiência no desenvolvimento de estudos e\r\nprojetos de hidrologia, recursos hídricos, e áreas afins.\r\nEssa possibilidade vem se tornando cada vez mais comum nos dias de\r\nhoje. Por exemplo, a Agência Nacional de Águas e Saneamento Básico\r\n(ANA), o Operador Nacional do Sistema Elétrico (ONS), e outras\r\ninstituições no Brasil e no exterior disponibilizam alguns de seus dados\r\npor meio do chamado webservice.\r\nEm essência, o webservice é apenas um site que contém os dados.\r\nPorém, esses dados estão organizados de uma maneira bem específica, de\r\nforma que para que seja possível obtê-los de forma eficiente, é\r\nimprescindível que essa organização seja bem entedida. Aqui neste curso\r\nintrodutório, vamos focar nossas atividades no webservice da ANA, que se\r\nencontra disponível por meio do url http://telemetriaws1.ana.gov.br/ServiceANA.asmx.\r\nQuando acessamos esse endereço, somos levados para a página\r\nabaixo,\r\n\r\n\r\n\r\nSe dermos um zoom na figura, podemos verificar todas as informações\r\nque estão disponíveis no webservice, tais como “dados\r\nhidrometeorológicos”, “dados hidrometeorológicos gerais”, “lista de\r\nestações telemétricas”, “Cotas”, “inventário”, “rios”, “série\r\nhistórica”, entre outras.\r\nNesse mesmo site, pode-se acessar um arquivo em formato pdf com\r\ndetalhes sobre o sistema como um todo, e com o que se pode obter dentro\r\ndele http://telemetriaws1.ana.gov.br/Telemetria1ws.pdf! Esse\r\narquivo é essencial para entendermos como os dados estão disponíveis e\r\ncomo podemos acessá-los.\r\nEsse documento nos informa que os dados hidrológicos da ANA estão\r\ndisponibilizados no formato XML (“Extended Markup Language”), de forma\r\nque precisamos aprender como acessar e manipular as informações\r\ndisponibilizados nesse formato. Mas discutiremos apenas o básico neste\r\ncurso, sem nos profundarmos muito. Porém se você deseja saber mais sobre\r\nwebscraping e usufruir de várias de suas possibilidade, sugerimos que\r\nprocure se aprofundar mais nesse tema.\r\nLista das Estações\r\nTelemétricas da ANA\r\nComeçaremos nossas atividades acessando os dados das estações\r\ntelemétricas desse sistema. Pode-se perceber olhando para o próprio\r\nsite, que são necessários dois parâmetros para pesquisar as estações. O\r\nprimiero chama-se “statusEstacoes”, que pode ser 0, que significa\r\nestação ativa, ou 1, que representa estação em manutenção. O segundo\r\nparâmetro é chamado de “Origem”, podendo variar entre 0 e 5. Se olharmos\r\no arquivo em formato pdf mencioando acima, vamos ver que se deixarmos o\r\n“statusEstacoes” em branco, serão retornadas as informações de todas as\r\nestações do sistema, que é exatamente o que queremos agora.\r\nSendo assim, se colocarmos no nosso navegador o seguinte url: http://telemetriaws1.ana.gov.br/ServiceANA.asmx/ListaEstacoesTelemetricas?statusEstacoes=&origem=,\r\nteremos acesso ao arquivo XML com a informação de todas as estações\r\ntelemétricas.\r\n\r\n\r\n\r\nPara que tenhamos cesso a essas informações nesse mesmo formato no\r\nRStudio, teremos que fazer uso de um pacote chamado “XML”, que contém a\r\nfunção denominada xmlParse(). Essa função é capaz de ler um arquivo do\r\ntipo XML e gerar uma estrutura no R similar ao que aparece na imagem\r\nacima (formato de “árvore”). A função exige que informemos um argumento\r\nobrigatório, que é o url a ser utilizado, e permite ainda que passemos\r\num argumento opcional, que é a codificação do arquivo (do inglês\r\nencoding). Usualmente no Brasil, utilizamos o “UTF-8” para poder\r\nutilizar nossos acentos (mas lembre-se que essa parte é um outro mundo\r\nno R e não entraremos com maiores detalhamentos).\r\n\r\n\r\nstatus_codigo <- \"\"\r\norigem_codigo <- \"\"\r\n\r\nurl_base <- paste0(\"http://telemetriaws1.ana.gov.br/ServiceANA.asmx/ListaEstacoesTelemetricas?\",\r\n                   \"statusEstacoes=\", status_codigo, \"&origem=\", origem_codigo)\r\nurl_parse <- XML::xmlParse(url_base, encoding = \"UTF-8\")\r\n\r\n\r\nOlha o nosso código um pouco. Percebe que invés de digitar\r\ndiretamente o url para acesso, quebramos ele em várias partes e juntamos\r\ncom a função paste0(). Fizemos isso para ficar mais fácil de mudar algo\r\ndepois. Caso quisermos utilizar outro valor em “statusEstacoes” ou em\r\n“Origem”, basta mudarmos os objetos criados e o resto do código continua\r\nigual! Ao chamar o url_parse no console, verá uma imagem similar ao site\r\nquando abrimos o url.\r\nPara puxar agora as informações dessas estações, precisamos entender\r\nmelhor o arquivo original no formato XML. De maneira resumida, arquivos\r\nno formato XML ou HTML possuem estruturas que são definidas entre “<\r\n>”. Ao mexer no url que nos dá todas as estações, percebe-se que\r\ntodos os dados de cada estação são precedidos por um elemento chamado\r\n“Table” (dentro do “<>”). Porém, queremos os nodes que estão\r\nassociados a esses “Tables” (tabelas). Para isso, samos a função\r\ngetNodeSet(). Com os argumentos dessa função sendo primeiro o objeto\r\ncriado no R depois de ter feito um xmlParse() e o segundo argumento\r\nsendo “//Table” (lembrar de colocar essas duas barras)\r\n\r\n\r\n\r\nA próxima etapa agora é transformar esse arquivo em algo que estamos\r\nmais acostumados a mexer dentro do R. Boas opções são dataframes e\r\nlistas. Como não aprendemos a mexer muito com listas, vamos transformar\r\nnosso objeto em um dataframe. Para isso utilizamos a função\r\nxmlToDataFrame().\r\n\r\n\r\nnodes_doc <- XML::getNodeSet(url_parse, \"//Table\")\r\ncadastro_estacoes <- XML::xmlToDataFrame(nodes = nodes_doc)\r\n\r\n\r\nAgora podemos fazer as manipulações que já aprendemos anteriormente\r\n(com dataframe ficou fácil!). Por exemplo, se quisermos selecionar\r\napenas as estações de Brasília, escrevemos o código abaixo. O\r\n“Municipio-UF” é apenas uma das colunas do dataframe, podemos filtrar\r\ncom base em qualquer outra também.\r\n\r\n\r\n(estacoes_bsb <- dplyr::filter(cadastro_estacoes, `Municipio-UF` == \"BRASÍLIA-DF\"))\r\n\r\n                                    NomeEstacao CodEstacao Bacia\r\n1                        ANA SEDE (COTA ONLINE)   01547032     6\r\n2                        ANA SEDE - TELEMÉTRICA   01547079     6\r\n3                            RIBEIRÃO PALMEIRAS   20000950     2\r\n4                                        SONHEM   20001050     2\r\n5                             CONTAGEM - VC 201   20001200     2\r\n6                           RIBEIRÃO SANTA RITA   42450050     4\r\n7                               RIBEIRÃO JACARÉ   42450300     4\r\n8                  RIO PRETO - MONTANTE EXTREMA   42450360     4\r\n9                             LAGOINHA - DF 105   42450370     4\r\n10                             EXTREMA - DF 100   42450510     4\r\n11                  RIO PRETO - FAZENDA ITAPETI   42450600     4\r\n12                              JARDIM - DF 260   42450740     4\r\n13                    JARDIM - MONTANTE LAMARÃO   42450770     4\r\n14                       RIBEIRÃO JARDIM DF-100   42450900     4\r\n15                             RIO SÃO BERNARDO   42454000     4\r\n16            DESCOBERTO JUS. CAPTAÇÃO BARROCÃO   60434600     6\r\n17                      DESCOBERTO - CHACARA 89   60435000     6\r\n18                            RODEADOR - DF 435   60435200     6\r\n19                          RIBEIRÃO DAS PEDRAS   60435405     6\r\n20                        DESCOBERTO - BARRAGEM   60435500     6\r\n21                                     MELCHIOR   60436185     6\r\n22                               RIO DESCOBERTO   60436186     6\r\n23                                   PONTE ALTA   60443830     6\r\n24                                      ALAGADO   60444035     6\r\n25                                    PIPIRIPAU   60472235     6\r\n26                          RIBEIRÃO SOBRADINHO   60474300     6\r\n27                BARTOLOMEU - MONTANTE PARANOÁ   60476155     6\r\n28                       SANTA MARIA - BARRAGEM   60477100     6\r\n29         RIBEIRÃO TORTO JUSANTE CÓRREGO URUBÚ   60477380     6\r\n30                  UHE PARANOÁ CÓRREGO BANANAL   60477607     6\r\n31                      RIACHO FUNDO VILA CAUHY   60478185     6\r\n32 MONTANTE ZOOLÓGICO - EPIA 003 - RIACHO FUNDO   60478200     6\r\n33                                ESTAÇÃO TESTE   60478250     6\r\n34                                ESTAÇÃO TESTE   60478250     6\r\n35                              ESTAÇÃO TESTE 1   60478251     6\r\n36                       RIBEIRÃO MARIA PEREIRA   60478477     6\r\n37                           CÓRREGO SAIA VELHA   60478481     6\r\n38                                      FAL-UNB   60478482     6\r\n39                              CÓRREGO TAQUARA   60478493     6\r\n40                             RIBEIRÃO DO GAMA   60478520     6\r\n41          UHE PARANOÁ CÓRREGO CABEÇA DE VEADO   60478610     6\r\n42                        BARRAGEM LAGO PARANOÁ   60479230     6\r\n43                       UHE PARANOÁ BARRAMENTO   60479270     6\r\n44                          UHE PARANOÁ JUSANTE   60479280     6\r\n45                                       TABOCA   60480310     6\r\n46                                       PAPUDA   60480550     6\r\n47                                 CACHOEIRINHA   60491000     6\r\n48                                      SANTANA   60492000     6\r\n   SubBacia\r\n1        60\r\n2        60\r\n3        20\r\n4        20\r\n5        20\r\n6        42\r\n7        42\r\n8        42\r\n9        42\r\n10       42\r\n11       42\r\n12       42\r\n13       42\r\n14       42\r\n15       42\r\n16       60\r\n17       60\r\n18       60\r\n19       60\r\n20       60\r\n21       60\r\n22       60\r\n23       60\r\n24       60\r\n25       60\r\n26       60\r\n27       60\r\n28       60\r\n29       60\r\n30       60\r\n31       60\r\n32       60\r\n33       60\r\n34       60\r\n35       60\r\n36       60\r\n37       60\r\n38       60\r\n39       60\r\n40       60\r\n41       60\r\n42       60\r\n43       60\r\n44       60\r\n45       60\r\n46       60\r\n47       60\r\n48       60\r\n                                                          Operadora\r\n1                          00001 - ANA - Agência Nacional de Águas \r\n2                          00001 - ANA - Agência Nacional de Águas \r\n3  00190 - ADASA-DF - Agência Reguladora de Águas e Saneamento - DF\r\n4  00190 - ADASA-DF - Agência Reguladora de Águas e Saneamento - DF\r\n5  00190 - ADASA-DF - Agência Reguladora de Águas e Saneamento - DF\r\n6  00190 - ADASA-DF - Agência Reguladora de Águas e Saneamento - DF\r\n7               00082 - CPRM - Cia de Pesquisa de Recursos Minerais\r\n8  00190 - ADASA-DF - Agência Reguladora de Águas e Saneamento - DF\r\n9  00190 - ADASA-DF - Agência Reguladora de Águas e Saneamento - DF\r\n10 00190 - ADASA-DF - Agência Reguladora de Águas e Saneamento - DF\r\n11 00190 - ADASA-DF - Agência Reguladora de Águas e Saneamento - DF\r\n12 00190 - ADASA-DF - Agência Reguladora de Águas e Saneamento - DF\r\n13 00190 - ADASA-DF - Agência Reguladora de Águas e Saneamento - DF\r\n14 00190 - ADASA-DF - Agência Reguladora de Águas e Saneamento - DF\r\n15              00082 - CPRM - Cia de Pesquisa de Recursos Minerais\r\n16                                            00077 - CAESB - CAESB\r\n17                                            00077 - CAESB - CAESB\r\n18                                            00077 - CAESB - CAESB\r\n19 00190 - ADASA-DF - Agência Reguladora de Águas e Saneamento - DF\r\n20                                            00077 - CAESB - CAESB\r\n21 00190 - ADASA-DF - Agência Reguladora de Águas e Saneamento - DF\r\n22 00190 - ADASA-DF - Agência Reguladora de Águas e Saneamento - DF\r\n23 00190 - ADASA-DF - Agência Reguladora de Águas e Saneamento - DF\r\n24 00190 - ADASA-DF - Agência Reguladora de Águas e Saneamento - DF\r\n25              00082 - CPRM - Cia de Pesquisa de Recursos Minerais\r\n26 00190 - ADASA-DF - Agência Reguladora de Águas e Saneamento - DF\r\n27 00190 - ADASA-DF - Agência Reguladora de Águas e Saneamento - DF\r\n28                                            00077 - CAESB - CAESB\r\n29 00190 - ADASA-DF - Agência Reguladora de Águas e Saneamento - DF\r\n30                                   00133 - CEB - CEB Geração S.A.\r\n31 00190 - ADASA-DF - Agência Reguladora de Águas e Saneamento - DF\r\n32                                            00077 - CAESB - CAESB\r\n33                         00001 - ANA - Agência Nacional de Águas \r\n34                         00001 - ANA - Agência Nacional de Águas \r\n35                         00001 - ANA - Agência Nacional de Águas \r\n36 00190 - ADASA-DF - Agência Reguladora de Águas e Saneamento - DF\r\n37 00190 - ADASA-DF - Agência Reguladora de Águas e Saneamento - DF\r\n38                           00250 - UNB - Universidade de Brasília\r\n39                           00250 - UNB - Universidade de Brasília\r\n40 00190 - ADASA-DF - Agência Reguladora de Águas e Saneamento - DF\r\n41                                   00133 - CEB - CEB Geração S.A.\r\n42 00190 - ADASA-DF - Agência Reguladora de Águas e Saneamento - DF\r\n43                                   00133 - CEB - CEB Geração S.A.\r\n44                                   00133 - CEB - CEB Geração S.A.\r\n45 00190 - ADASA-DF - Agência Reguladora de Águas e Saneamento - DF\r\n46 00190 - ADASA-DF - Agência Reguladora de Águas e Saneamento - DF\r\n47 00190 - ADASA-DF - Agência Reguladora de Águas e Saneamento - DF\r\n48 00190 - ADASA-DF - Agência Reguladora de Águas e Saneamento - DF\r\n                                                        Responsavel\r\n1                          00001 - ANA - Agência Nacional de Águas \r\n2                          00001 - ANA - Agência Nacional de Águas \r\n3  00190 - ADASA-DF - Agência Reguladora de Águas e Saneamento - DF\r\n4  00190 - ADASA-DF - Agência Reguladora de Águas e Saneamento - DF\r\n5  00190 - ADASA-DF - Agência Reguladora de Águas e Saneamento - DF\r\n6  00190 - ADASA-DF - Agência Reguladora de Águas e Saneamento - DF\r\n7                          00001 - ANA - Agência Nacional de Águas \r\n8  00190 - ADASA-DF - Agência Reguladora de Águas e Saneamento - DF\r\n9  00190 - ADASA-DF - Agência Reguladora de Águas e Saneamento - DF\r\n10 00190 - ADASA-DF - Agência Reguladora de Águas e Saneamento - DF\r\n11 00190 - ADASA-DF - Agência Reguladora de Águas e Saneamento - DF\r\n12 00190 - ADASA-DF - Agência Reguladora de Águas e Saneamento - DF\r\n13 00190 - ADASA-DF - Agência Reguladora de Águas e Saneamento - DF\r\n14 00190 - ADASA-DF - Agência Reguladora de Águas e Saneamento - DF\r\n15                         00001 - ANA - Agência Nacional de Águas \r\n16                                            00077 - CAESB - CAESB\r\n17                                            00077 - CAESB - CAESB\r\n18                                            00077 - CAESB - CAESB\r\n19 00190 - ADASA-DF - Agência Reguladora de Águas e Saneamento - DF\r\n20                                            00077 - CAESB - CAESB\r\n21 00190 - ADASA-DF - Agência Reguladora de Águas e Saneamento - DF\r\n22 00190 - ADASA-DF - Agência Reguladora de Águas e Saneamento - DF\r\n23 00190 - ADASA-DF - Agência Reguladora de Águas e Saneamento - DF\r\n24 00190 - ADASA-DF - Agência Reguladora de Águas e Saneamento - DF\r\n25                         00001 - ANA - Agência Nacional de Águas \r\n26 00190 - ADASA-DF - Agência Reguladora de Águas e Saneamento - DF\r\n27 00190 - ADASA-DF - Agência Reguladora de Águas e Saneamento - DF\r\n28                                            00077 - CAESB - CAESB\r\n29 00190 - ADASA-DF - Agência Reguladora de Águas e Saneamento - DF\r\n30                                   00133 - CEB - CEB Geração S.A.\r\n31 00190 - ADASA-DF - Agência Reguladora de Águas e Saneamento - DF\r\n32                                            00077 - CAESB - CAESB\r\n33                         00001 - ANA - Agência Nacional de Águas \r\n34                         00001 - ANA - Agência Nacional de Águas \r\n35                         00001 - ANA - Agência Nacional de Águas \r\n36 00190 - ADASA-DF - Agência Reguladora de Águas e Saneamento - DF\r\n37 00190 - ADASA-DF - Agência Reguladora de Águas e Saneamento - DF\r\n38                         00001 - ANA - Agência Nacional de Águas \r\n39                         00001 - ANA - Agência Nacional de Águas \r\n40 00190 - ADASA-DF - Agência Reguladora de Águas e Saneamento - DF\r\n41                                   00133 - CEB - CEB Geração S.A.\r\n42 00190 - ADASA-DF - Agência Reguladora de Águas e Saneamento - DF\r\n43                                   00133 - CEB - CEB Geração S.A.\r\n44                                   00133 - CEB - CEB Geração S.A.\r\n45 00190 - ADASA-DF - Agência Reguladora de Águas e Saneamento - DF\r\n46 00190 - ADASA-DF - Agência Reguladora de Águas e Saneamento - DF\r\n47 00190 - ADASA-DF - Agência Reguladora de Águas e Saneamento - DF\r\n48 00190 - ADASA-DF - Agência Reguladora de Águas e Saneamento - DF\r\n   Municipio-UF  Latitude Longitude Altitude   CodRio\r\n1   BRASÍLIA-DF -15.81805 -47.94500  1150.00        0\r\n2   BRASÍLIA-DF -15.81810 -47.94500  1150.00        0\r\n3   BRASÍLIA-DF -15.52810 -47.74190     0.00 20003000\r\n4   BRASÍLIA-DF -15.52310 -47.81580     0.00 20030000\r\n5   BRASÍLIA-DF -15.50080 -47.85420     0.00 20050000\r\n6   BRASÍLIA-DF -15.58560 -47.33330   870.00 42250100\r\n7   BRASÍLIA-DF -15.64060 -47.35670     0.00 42250300\r\n8   BRASÍLIA-DF -15.83720 -47.36890     0.00 42250000\r\n9   BRASÍLIA-DF -15.77250 -47.39890     0.00 42250350\r\n10  BRASÍLIA-DF -15.84580 -47.38530     0.00 42250500\r\n11  BRASÍLIA-DF -15.94280 -47.36360     0.00 42250000\r\n12  BRASÍLIA-DF -15.85970 -47.47560     0.00 42250800\r\n13  BRASÍLIA-DF -15.94750 -47.44580     0.00 42250800\r\n14  BRASÍLIA-DF -15.97390 -47.39860     0.00 42250800\r\n15  BRASÍLIA-DF -16.03580 -47.41500     0.00 42252000\r\n16  BRASÍLIA-DF -15.63440 -48.18420  1094.00 60315000\r\n17  BRASÍLIA-DF -15.70890 -48.23390  1034.00 60315000\r\n18  BRASÍLIA-DF -15.72500 -48.16830  1035.00 60315400\r\n19  BRASÍLIA-DF -15.76220 -48.15940     0.00 60315800\r\n20  BRASÍLIA-DF -15.77780 -48.23140  1032.00 60315000\r\n21  BRASÍLIA-DF -15.92670 -48.25890     0.00 60314500\r\n22  BRASÍLIA-DF -15.93110 -48.25750     0.00 60315000\r\n23  BRASÍLIA-DF -16.03720 -48.13610     0.00 60317515\r\n24  BRASÍLIA-DF -16.04670 -48.08220     0.00 60317500\r\n25  BRASÍLIA-DF -15.61440 -47.54560  1008.00 60320100\r\n26  BRASÍLIA-DF -15.72720 -47.69670     0.00 60320800\r\n27  BRASÍLIA-DF -15.80940 -47.70060     0.00 60320000\r\n28  BRASÍLIA-DF -15.66890 -47.95360  1075.00 60321060\r\n29  BRASÍLIA-DF -15.72190 -47.86810     0.00 60321040\r\n30  BRASÍLIA-DF -15.72830 -47.91000  1003.00 60321120\r\n31  BRASÍLIA-DF -15.87530 -47.96610  1019.00 60321180\r\n32  BRASÍLIA-DF -15.85940 -47.94190  1005.00 60321180\r\n33  BRASÍLIA-DF -15.81670 -47.95000     0.00 60321180\r\n34  BRASÍLIA-DF -15.81670 -47.95000     0.00 60321180\r\n35  BRASÍLIA-DF -15.81940 -47.95560     0.00 60321180\r\n36  BRASÍLIA-DF -16.04220 -47.84860     0.00 60322510\r\n37  BRASÍLIA-DF -16.04970 -47.93780     0.00 60323000\r\n38  BRASÍLIA-DF -15.94500 -47.93830  1066.00 60321270\r\n39  BRASÍLIA-DF -15.91110 -47.90890     0.00 60321300\r\n40  BRASÍLIA-DF -15.85830 -47.87390     0.00 60321260\r\n41  BRASÍLIA-DF -15.85580 -47.85750  1003.96 60321340\r\n42  BRASÍLIA-DF -15.79720 -47.78420     0.00 60321020\r\n43  BRASÍLIA-DF -15.79750 -47.78390  1000.00 60321000\r\n44  BRASÍLIA-DF -15.79110 -47.76220   895.00 60321000\r\n45  BRASÍLIA-DF -15.87530 -47.72280     0.00 60321380\r\n46  BRASÍLIA-DF -15.89250 -47.72280     0.00 60321400\r\n47  BRASÍLIA-DF -16.03560 -47.68530     0.00 60103050\r\n48  BRASÍLIA-DF -16.05080 -47.74420     0.00 60321800\r\n                         NomeRio              Origem StatusEstacao\r\n1                                         CotaOnline         Ativo\r\n2                                                RHN         Ativo\r\n3             RIBEIRÃO PALMEIRAS Setor de Saneamento         Ativo\r\n4                     RIO SONHEM Setor de Saneamento         Ativo\r\n5           RIBEIRÃO DA CONTAGEM                 RHN         Ativo\r\n6            RIBEIRÃO SANTA RITA                 RHN         Ativo\r\n7  CÓRREGO BURITI GRANDE/ JACARÉ                 RHN         Ativo\r\n8                      RIO PRETO Setor de Saneamento         Ativo\r\n9               CÓRREGO LAGOINHA Setor de Saneamento         Ativo\r\n10              RIBEIRÃO EXTREMA                 RHN         Ativo\r\n11                     RIO PRETO                 RHN         Ativo\r\n12               RIBEIRÃO JARDIM Setor de Saneamento         Ativo\r\n13               RIBEIRÃO JARDIM Setor de Saneamento         Ativo\r\n14               RIBEIRÃO JARDIM                 RHN         Ativo\r\n15         RIBEIRÃO SÃO BERNARDO                 RHN         Ativo\r\n16                RIO DESCOBERTO                 RHN         Ativo\r\n17                RIO DESCOBERTO                 RHN         Ativo\r\n18                  RIO RODEADOR                 RHN         Ativo\r\n19           RIBEIRÃO DAS PEDRAS Setor de Saneamento         Ativo\r\n20                RIO DESCOBERTO                 RHN         Ativo\r\n21                  RIO MELCHIOR Setor de Saneamento         Ativo\r\n22                RIO DESCOBERTO Setor de Saneamento         Ativo\r\n23           RIBEIRÃO PONTE ALTA Setor de Saneamento         Ativo\r\n24                   RIO ALAGADO Setor de Saneamento         Ativo\r\n25                 RIO PIPIRIPAU                 RHN         Ativo\r\n26           RIBEIRÃO SOBRADINHO Setor de Saneamento         Ativo\r\n27            RIO SÃO BARTOLOMEU Setor de Saneamento         Ativo\r\n28              LAGO SANTA MARIA                 RHN         Ativo\r\n29             RIBEIRÃO DO TORTO                 RHN         Ativo\r\n30               CÓRREGO BANANAL      Setor Elétrico         Ativo\r\n31                  RIACHO FUNDO Setor de Saneamento         Ativo\r\n32                  RIACHO FUNDO                 RHN         Ativo\r\n33                  RIACHO FUNDO                 RHN         Ativo\r\n34                  RIACHO FUNDO                 GDH         Ativo\r\n35                  RIACHO FUNDO                 RHN         Ativo\r\n36        RIBEIRÃO MARIA PEREIRA Setor de Saneamento         Ativo\r\n37                RIO SAIA VELHA Setor de Saneamento         Ativo\r\n38             CORREGO CAPETINGA                 RHN         Ativo\r\n39               CÓRREGO TAQUARA                 RHN         Ativo\r\n40              RIBEIRÃO DO GAMA Setor de Saneamento         Ativo\r\n41       CÓRREGO CABEÇA DE VEADO      Setor Elétrico         Ativo\r\n42               LAGO DO PARANOÁ                 RHN         Ativo\r\n43                   RIO PARANOÁ      Setor Elétrico         Ativo\r\n44                   RIO PARANOÁ      Setor Elétrico         Ativo\r\n45            RIBEIRÃO DA TABOCA Setor de Saneamento         Ativo\r\n46             CÓRREGO DA PAPUDA Setor de Saneamento         Ativo\r\n47                 CÓRREGO VIÚDA Setor de Saneamento         Ativo\r\n48              RIBEIRÃO SANTANA Setor de Saneamento         Ativo\r\n\r\nLembrando que isso tudo nos dá apenas a lista com informações sobre\r\nas estações telemétricas. Para de fato termos acesso aos dados dessas\r\nestações, precisamos acessar outro url e fazer mais alguns códigos!\r\nIdealmente, se a gente quiser ficar sempre puxando diferentes\r\ninformações e não ficar precisando rodar linha por linha de código,\r\npodemos juntar tudo isso em uma função. Para a nossa função, deixaremos\r\no processo um pouco melhor. Primeiro definiremos que a função precisa de\r\n3 parâmetros (o status da estação, a origem e qual Unidade Federativa do\r\nBrasil queremos). Após puxar os dados em XML e transformar tudo em um\r\ndataframe, fazemos aqui algo novo - criamos uma coluna chamada “UF”\r\ncontendo apenas as últimas duas letras do Município (isos porque no\r\narquivo original, as duas últimas letras são as siglas da UF).\r\n\r\n\r\nANA_info <- function(status_codigo = \"\",\r\n                     origem_codigo = \"\",\r\n                     UF_fun = \"DF\"){\r\n\r\n  # Essas etapas foram vistas anteriormente\r\n  url_base <- paste0(\"http://telemetriaws1.ana.gov.br/ServiceANA.asmx/ListaEstacoesTelemetricas?\",\r\n                     \"statusEstacoes=\", status_codigo,\r\n                     \"&origem=\", origem_codigo)\r\n  url_parse <- XML::xmlParse(url_base, encoding = \"UTF-8\")\r\n  nodes_doc <- XML::getNodeSet(url_parse, \"//Table\")\r\n  cadastro_estacoes <- XML::xmlToDataFrame(nodes = nodes_doc)\r\n  \r\n  # Aqui criamos uma coluna no dataframe apenas com nomes das UFs\r\n  cadastro_estacoes$UF <- substr(cadastro_estacoes$`Municipio-UF`,\r\n                                 nchar(cadastro_estacoes$`Municipio-UF`) - 1,\r\n                                 nchar(cadastro_estacoes$`Municipio-UF`))\r\n                                 \r\n  estacoes_UF <- dplyr::filter(cadastro_estacoes, `UF` == UF_fun)\r\n\r\n  return(estacoes_UF)\r\n}\r\n\r\n\r\nPodemos simplesmente testar essa função criada chamando a função e\r\natribuindo para um objeto qualquer (chamamos aqui de “teste”) seu\r\nresultado. Em seguida falamos para o R printar as colunas desse\r\ndataframe.\r\n\r\n\r\n# Testar a função feita!\r\nteste <- ANA_info()\r\ncolnames(teste)\r\n\r\n [1] \"NomeEstacao\"   \"CodEstacao\"    \"Bacia\"         \"SubBacia\"     \r\n [5] \"Operadora\"     \"Responsavel\"   \"Municipio-UF\"  \"Latitude\"     \r\n [9] \"Longitude\"     \"Altitude\"      \"CodRio\"        \"NomeRio\"      \r\n[13] \"Origem\"        \"StatusEstacao\" \"UF\"           \r\n\r\nDados Hidrometeorológicos da\r\nANA\r\nPara acessar os dados hidrometeorológicos nesse webservice, temos\r\noutro url: http://telemetriaws1.ana.gov.br/ServiceANA.asmx?op=DadosHidrometeorologicos.\r\nNele, vemos que são necessárias agora três parâmetros para fazermos uma\r\nbusca: o “codEstacao” (que a gente pegou na parte anterior!), a\r\n“dataInicio” e a “dataFim”. Do mesmo jeito de antes, vamos definir um\r\nobjeto para cada parâmetro e depois criar um url baseado nesses\r\nparâmetros. Em seguida fazemos um xmlParse() e pegamos as informações\r\ncontidas nos nodes com o getNodeSet(). Por último, transformamos isso em\r\num dataframe. Dessa vez, podemos fazer a função direto ja!\r\n\r\n\r\ndados_ANA <- function(cod_estacao = \"\",\r\n                      data_inicio = \"01/01/2020\",\r\n                      data_fim = Sys.Date()){\r\n\r\n  # Puxar dados do url e transformar em dataframe\r\n  url_base <- paste0(\"http://telemetriaws1.ana.gov.br/ServiceANA.asmx/DadosHidrometeorologicos?\",\r\n                     \"codEstacao=\", cod_estacao,\r\n                     \"&dataInicio=\", data_inicio,\r\n                     \"&dataFim=\", data_fim)\r\n  url_parse <- XML::xmlParse(url_base, encoding = \"UTF-8\")\r\n  node_doc <- XML::getNodeSet(url_parse, \"//DadosHidrometereologicos\")\r\n  dados_estacao <- XML::xmlToDataFrame(nodes = node_doc)\r\n  \r\n  return(dados_estacao)\r\n}\r\n\r\n\r\nA partir da função que criamos anteriormente, para puxar as\r\ninformações das estações, podemos ver os códigos de todas as estações.\r\nUm exemplo é a FAL, da própria UnB. Seu código é 60478482 - podemos usar\r\nele na nossa nova função “dados_ANA”. Para ver o que essa função criada\r\nretorna, podemos pedir ao R as primeiras 6 linhas desse dataframe.\r\n\r\n\r\ndados_FAL <- dados_ANA(cod_estacao = 60478482)\r\nhead(dados_FAL)\r\n\r\n  CodEstacao             DataHora Vazao Nivel Chuva\r\n1   60478482 2022-07-04 23:00:00        27.00  0.00\r\n2   60478482 2022-07-04 22:45:00        27.00  0.00\r\n3   60478482 2022-07-04 22:30:00        27.00  0.00\r\n4   60478482 2022-07-04 22:15:00        27.00  0.00\r\n5   60478482 2022-07-04 22:00:00        27.00  0.00\r\n6   60478482 2022-07-04 21:45:00        27.00  0.00\r\n\r\nPercebemos aqui um “problema”. A data e a hora estão na mesma coluna\r\ne idealmente queremos deixar em colunas separadas (uma contendo a data e\r\noutra contendo as horas). Então iremos adicionar dentro da nossa função,\r\nmais um comando para fazer essa separação. Um jeito simples (mas não o\r\núnico) de fazer isso é selecionando os primeiros 10 caracteres como\r\nsendo os de data e os últimos 8 como sendo de hora - porque a data\r\nsempre vai estar no formato “dia/mes/ano” e o horário em\r\n“hora:minuto:segundo”. Podemos também reorganizar as colunas do jeito\r\nque quisermos. Abaixo está essa nova função mais organizada.\r\n\r\n\r\ndados_ANA <- function(cod_estacao = \"\",\r\n                      data_inicio = \"01/01/2020\",\r\n                      data_fim = Sys.Date()){\r\n\r\n  # Puxar dados do url e transformar em dataframe\r\n  url_base <- paste0(\"http://telemetriaws1.ana.gov.br/ServiceANA.asmx/DadosHidrometeorologicos?\",\r\n                     \"codEstacao=\", cod_estacao,\r\n                     \"&dataInicio=\", data_inicio,\r\n                     \"&dataFim=\", data_fim)\r\n  url_parse <- XML::xmlParse(url_base, encoding = \"UTF-8\")\r\n  node_doc <- XML::getNodeSet(url_parse, \"//DadosHidrometereologicos\")\r\n  dados_estacao <- XML::xmlToDataFrame(nodes = node_doc)\r\n  \r\n  # Separar data e hora\r\n  dados_estacao$Data <- substr(dados_estacao$DataHora, 1, 10)\r\n  dados_estacao$Hora <- substr(dados_estacao$DataHora, 12, 19)\r\n\r\n  # Re-organizar a ordem das colunas do dataframe dados_estacao\r\n  dados_estacao <- dados_estacao[,c(1, 6, 7, 3, 4, 5)]\r\n  \r\n  return(dados_estacao)\r\n}\r\n\r\n\r\nChamamos novamente essa função (agora atualizada) para rodar a\r\nestação da FAL. Em seguida printamos no R apenas as primeiras 6 linhas\r\ndesse dataframe.\r\n\r\n\r\n# Rodar a função para a estação da FAL\r\ndados_FAL <- dados_ANA(cod_estacao = 60478482)\r\nhead(dados_FAL)\r\n\r\n  CodEstacao       Data     Hora Vazao Nivel Chuva\r\n1   60478482 2022-07-04 23:00:00       27.00  0.00\r\n2   60478482 2022-07-04 22:45:00       27.00  0.00\r\n3   60478482 2022-07-04 22:30:00       27.00  0.00\r\n4   60478482 2022-07-04 22:15:00       27.00  0.00\r\n5   60478482 2022-07-04 22:00:00       27.00  0.00\r\n6   60478482 2022-07-04 21:45:00       27.00  0.00\r\n\r\nAqui rodamos a função apenas para uma estação. Mas se quisermos rodar\r\npara várias estações, basta utilizar um loop (for) ou até mesmo a função\r\nlapply do R (mais rápido!).\r\nOutras formas\r\n\r\n\r\n\r\n",
      "last_modified": "2022-08-19T15:05:01-03:00"
    },
    {
      "path": "index.html",
      "title": "Obtenção, manipulação e análise de dados hidrológicos com R: uma introdução para iniciantes",
      "description": "Uma iniciativa do grupo [Água e Modelagem](https://aguaemodelagem.wordpress.com) para a Semana Universitária da Universidade de Brasília de 2022\n",
      "author": [
        {
          "name": "Dirceu S. Reis Jr.",
          "url": "https://github.com/DirceuReis"
        },
        {
          "name": "Francisco Eustáquio Oliveira e Silva",
          "url": "https://github.com/fcoeustaquio"
        },
        {
          "name": "Pedro Luis Borges Chaffe",
          "url": "https://github.com/fcoeustaquio"
        },
        {
          "name": "Wilson dos Santos Fernandes",
          "url": "https://github.com/wsf-ehr"
        },
        {
          "name": "Thiago Lappicy",
          "url": "https://github.com/rich-iannone"
        },
        {
          "name": "Saulo AIres de Souza",
          "url": {}
        },
        {
          "name": "Luiz Felipe Pereira de Brito",
          "url": {}
        }
      ],
      "contents": "\r\n\r\nContents\r\nApresentação\r\nDatas e local do curso\r\nComo se\r\ninscrever\r\nAntes do\r\ncurso\r\nTópicos (em construção)\r\nNoções de R\r\nObtenção\r\ndos dados\r\nManipulação dos dados\r\nAnálise exploratória dos\r\ndados\r\nAnálise de frequência de\r\ncheias\r\n\r\n\r\nApresentação\r\nEste é um curso introdutório sobre a linguagem R para aqueles\r\ninteressados em realizar análises hidrológicas. Será oferecido pela\r\nprimeira vez durante a Semana\r\nUniversitária da Universidade de Brasília, que acontecerá entre os\r\ndias 29/08 e 02/09 de 2022.\r\nDurante o curso, os alunos irão aprender como utilizar a linguagem R\r\npara executar um conjunto de atividades que permitirão realizar uma\r\nanálise de frequência de cheias para uma estação fluviométrica, cujos\r\ndados serão automaticamente obtidos do webservice da Agência Nacional de\r\nÁguas. Ao final do curso, os alunos terão finalizado um estudo que\r\npermitirá relacionar a magnitude das vazões máximas anuais com sua\r\nprobabilidade de excedência, relação primoridal para dimensionameno de\r\ndiversas estrutaras de engenharia, gestão do risco de cheias e para o\r\noredenamento do uso e ocupação do solo.\r\nEste curso é o primeiro de um conjunto maior de cursos que estão\r\nsendo elaborados pelos seguintes professores do blog Água e Modelagem:\r\nDirceu S. Reis Jr.\r\nFrancisco Eustáquio\r\nPedro Chaffe\r\nWilson Fernandes\r\nDatas e local do curso\r\nO curso será dado na Sala 5 do Laboratório Central de Computação\r\nCientífica da Faculdade de Tecnologia da Universidade de Brasília (LCCC\r\nULEG-FT), que fica localizado no prédio da Unidade de Laboratórios de\r\nEnsino de Graduação da Faculdade de Tecnologia (ULEG/FT).\r\nO curso será dividido em 5 aulas de 2 horas cada, totalizando 10\r\nhoras. As aulas serão dadas nos seguintes horários:\r\n29/08 a 01/09 das 8h00 às 10h00\r\n02/09 das 12h00 às 14h00.\r\nComo se inscrever\r\nAs inscrições poderão ser feitas entre os dias 01 e 28 de agosto por\r\neste link\r\nda Semana Universitária. Vale notar que este curso só estará\r\ndisponível na lista fornecido pelo link acima a partir do dia 01 de\r\nagosto.\r\nComo o número de vagas é limitado, recomenda-se que a inscrição seja\r\nfeita o quanto antes.\r\nAntes do curso\r\nIncluiremos aqui um tutorial de como instalar o R, RStudio e os\r\ndiversos pacotes que serão utilizados no curso.\r\nR e RStudio\r\nPacotes\r\ntydiverse\r\n\r\nTópicos (em construção)\r\nNoções de R\r\nCriação de objetos e operações matemáticas básicas\r\nAbertura de arquivos de várias fontes (csv, excel, binário etc)\r\nDiscussão de Como lidar com a presença de “NA” no R com exemplos de\r\noperações\r\nApresentação de alguns pacotes (tidyverse: dplyr, ggplot2,\r\nlubridate)\r\nObtenção dos dados\r\nObtenção a partir de diversas fontes de informação\r\nAGência Nacional de Águas e Saneamento Básico (ANA)\r\nOperador Nacional do Sistema Elétrico (ONS)\r\nBases da dados internacionais\r\n\r\nProcedimentos para pré-selecionar estações\r\ncom base num Shapefile de uma bacia\r\n(IMPORTANTE: ir atrá disso) código Thiago: lat-lon -> trecho de\r\nrio -> trechos de montante -> estações flu\r\n\r\nObtenção de informações com bae em diferentes forms de filtros\r\n% falhas no ano\r\nnúmero mínimo de anos sem falhas]\r\nnúmero mínimo de anos sem falhas consecutivas\r\noutros\r\n\r\nManipulação dos dados\r\nReorganizar dados dependendo das especificidades do que se quer\r\nfazer\r\nGerar séries diárias, mensais e anuais (considerando ano\r\nhidrológico)\r\nGerar séries de Q7\r\nGerar séries de máximos anuais\r\nGerar séries acima de um determinado threshold (para análise\r\nPDS)\r\nDeterminação de veranicos (extensão e frequência) nos dados de\r\nchuva\r\noutros?\r\nAnálise exploratória dos\r\ndados\r\nRepresentação gráfica oriundas de um conjunto de estações\r\nem um mapa\r\nem um gráfico (e.g., boxplot)\r\n\r\nRepresentação gráfica de uma única estação\r\nRepresentação numérica\r\nMédia\r\ndesvio-padrão\r\ncorrelação temporal\r\ncorrelação espacial\r\n\r\nAnálise de frequência de\r\ncheias\r\nPosição de plotagem\r\nA distribuição de probabilidades\r\nAjuste da distribuição\r\nValores dos parâmetros\r\nDeterminação dos quantis de cheia\r\nDeterminação dos intervalos que descevem as incertezas na\r\nestimativa\r\nPlotagem\r\ncurva de frequência (Tr vs Q)\r\n\r\nTabelas com resutados\r\n\r\n\r\n\r\n",
      "last_modified": "2022-08-19T15:05:03-03:00"
    }
  ],
  "collections": []
}
